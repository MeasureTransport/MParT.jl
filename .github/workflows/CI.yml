name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.7'
          - '1.8'
          - '1.9'
          - '1.10'
        os:
          - ubuntu-latest
          - macos-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - name: Checkout MParT
        uses: actions/checkout@v3
        with:
          repository: MeasureTransport/MParT
          path: mpart

      - name: Setup Julia
        run: |
          export GITHUB_JULIA_PATH=$(julia -e "println(DEPOT_PATH[1])")
          echo -n $'[bee5971c-294f-5168-9fcd-9fb3c811d495]\nMParT = \"' >> $GITHUB_JULIA_PATH/artifacts/Overrides.toml
          echo -n $GITHUB_WORKSPACE                                     >> $GITHUB_JULIA_PATH/artifacts/Overrides.toml
          echo -n "/MPART_INSTALL\""                                    >> $GITHUB_JULIA_PATH/artifacts/Overrides.toml

      - name: Configure MParT
        shell: bash -l {0}
        run: |
          cd $GITHUB_WORKSPACE/mpart
          mkdir build && cd build
          export JLCXX_PATH=$(julia -e "using Pkg; Pkg.activate(\"$GITHUB_WORKSPACE\",io=devnull); import CxxWrap; print(CxxWrap.prefix_path())")
          cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/MPART_INSTALL/ -DJlCxx_DIR=$JLCXX_PATH/lib/cmake/JlCxx/ ../

      - name: Build MParT
        shell: bash -l {0}
        run: cd $GITHUB_WORKSPACE/mpart/build; make -j2 install

      - uses: julia-actions/julia-runtest@v1
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1.9'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using MParT
            DocMeta.setdocmeta!(MParT, :DocTestSetup, :(using MParT); recursive=true)
            doctest(MParT)'
